name: Release Discord Bots

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "genie-bot/**"
      - "triviabot/**"
      - "opie-bot/**"

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      genie-changed: ${{ steps.filter.outputs['genie-bot'] }}
      trivia-changed: ${{ steps.filter.outputs['triviabot'] }}
      opie-changed: ${{ steps.filter.outputs['opie-bot'] }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            genie-bot:
              - 'genie-bot/**'
            triviabot:
              - 'triviabot/**'
            opie-bot:
              - 'opie-bot/**'

  release:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - bot: genie-bot
            tagPrefix: Gv
            botName: genie
            changed: ${{ needs.filter.outputs.genie-changed }}
          - bot: triviabot
            tagPrefix: Tv
            botName: trivia
            changed: ${{ needs.filter.outputs.trivia-changed }}
          - bot: opie-bot
            tagPrefix: Ov
            botName: opie
            changed: ${{ needs.filter.outputs.opie-changed }}

    steps:
      - name: Skip if unchanged
        if: ${{ matrix.changed != 'true' }}
        run: echo "No changes detected in ${{ matrix.bot }}, skipping."

      - name: Checkout
        if: ${{ matrix.changed == 'true' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js & pnpm
        if: ${{ matrix.changed == 'true' }}
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install -g pnpm

      - name: Install dependencies
        if: ${{ matrix.changed == 'true' }}
        run: |
          cd ${{ matrix.bot }}
          pnpm install

      - name: Sync and stash changes
        if: ${{ matrix.changed == 'true' }}
        run: |
          cd ${{ matrix.bot }}
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git stash || true
          git pull --rebase origin main || git rebase --abort || true
          git stash pop || true

      - name: Run release-it
        if: ${{ matrix.changed == 'true' }}
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ matrix.bot }}
          pnpm exec release-it --ci --increment patch --tag-prefix=${{ matrix.tagPrefix }}
          echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Upload release artifact
        if: ${{ matrix.changed == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.bot }}-artifact
          path: |
            ${{ matrix.bot }}/dist
            ${{ matrix.bot }}/package.json
            ${{ matrix.bot }}/pnpm-lock.yaml

      - name: Post release to Discord
        if: ${{ matrix.changed == 'true' }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RELEASE_VERSION: ${{ steps.release.outputs.RELEASE_VERSION }}
          BOT_NAME: ${{ matrix.botName }}
        run: |
          cd ${{ matrix.bot }}
          CHANGELOG=$(awk 'BEGIN{p=0} /^## /{if(p++)exit} {if(p)print}' CHANGELOG.md)
          CONTENT=$(printf "# %s\n### Version: \`%s\`\n\n### Features & Fixes\n\n%s" "$BOT_NAME" "$RELEASE_VERSION" "$CHANGELOG")
          echo "$CONTENT" | jq -Rs '{content: .}' > payload.json
          curl -X POST "$DISCORD_WEBHOOK_URL" -H "Content-Type: application/json" -d @payload.json
