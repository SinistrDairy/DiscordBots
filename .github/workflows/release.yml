name: Release & Upload Artifacts

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bot:
          - genie-bot
          - triviabot
          - opie-bot

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: |
          cd ${{ matrix.bot }}
          pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Run Release-It
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ matrix.bot }}
          pnpm release --ci --increment patch
          echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Build Bot
        run: |
          cd ${{ matrix.bot }}
          pnpm exec sern build

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.bot }}-${{ steps.release.outputs.RELEASE_VERSION }}
          path: |
            ${{ matrix.bot }}/dist
            ${{ matrix.bot }}/package.json
            ${{ matrix.bot }}/pnpm-lock.yaml

      - name: Extract Changelog
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.release.outputs.RELEASE_VERSION }}
          NOTES=$(gh release view "$VERSION" --json body -q .body)
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo "notes=$NOTES" >> $GITHUB_OUTPUT

      - name: Notify Discord of Release
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VERSION=${{ steps.release.outputs.RELEASE_VERSION }}
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"# ${{ matrix.bot }} ðŸš€\n\n## Version $VERSION\n\n${{ steps.changelog.outputs.notes }}\"}" \
               $DISCORD_WEBHOOK_URL
