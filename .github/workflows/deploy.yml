name: Deploy Discord Bots

on:
  workflow_run:
    workflows: ["Release Discord Bots"]
    types: [completed]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      genie-changed: ${{ steps.filter.outputs['genie-bot'] }}
      trivia-changed: ${{ steps.filter.outputs['triviabot'] }}
      opie-changed: ${{ steps.filter.outputs['opie-bot'] }}
    steps:
      - name: Checkout for filtering
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            genie-bot:
              - 'genie-bot/**'
            triviabot:
              - 'triviabot/**'
            opie-bot:
              - 'opie-bot/**'

  deploy:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - bot: genie-bot
            name: Genie
            changed: ${{ needs.filter.outputs.genie-changed }}
          - bot: triviabot 
            name: Russell
            changed: ${{ needs.filter.outputs.trivia-changed }}
          - bot: opie-bot
            name: Opie
            changed: ${{ needs.filter.outputs.opie-changed }}

    steps:
      # 1) **Always** checkout the exact SHA the Release run used
      - name: Checkout at release SHA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/heads/main

      # 2) Install Node.js, pnpm & jq
      - name: Setup Node.js, pnpm & jq
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get update
          sudo apt-get install -y nodejs jq
          npm install -g pnpm

      # 3) Build only if this bot actually changed
      - name: Install & build bot
        if: ${{ matrix.changed == 'true' }}
        run: |
          cd ${{ matrix.bot }}
          pnpm install
          pnpm build

      # 4) SSH into your VPS
      - name: Setup SSH agent
        if: ${{ matrix.changed == 'true' }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        if: ${{ matrix.changed == 'true' }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      - name: Copy full bot folder and restart PM2
        if: ${{ matrix.changed == 'true' }}
        run: |
          REMOTE_BASE="/var/www/discord-bots/DiscordBots/${{ matrix.bot }}"

          # Create remote dir
          ssh root@${{ secrets.VPS_HOST }} \
            "mkdir -p $REMOTE_BASE"

          # Rsync everything except node_modules and Git history
          rsync -avz --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.sern' \
            ${{ matrix.bot }}/ \
            root@${{ secrets.VPS_HOST }}:$REMOTE_BASE

          # Now restart
          ssh root@${{ secrets.VPS_HOST }} \
            "pm2 restart ${{ matrix.bot }} || pm2 start $REMOTE_BASE/dist/index.js --name ${{ matrix.bot }}"


      - name: Notify Discord of Deployment
        if: ${{ matrix.changed == 'true' }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          set -x
          # Read version from package.json
          VERSION=$(jq -r .version ./${{ matrix.bot }}/package.json)
          
          # Build a clean JSON payload
          PAYLOAD=$(
            jq -nc --arg bot "${{ matrix.name }}" \
                   --arg ver "$VERSION" \
                   '{content: ("✅ Deployed \($bot) v\($ver) to production.")}'
          )
          
          echo "Payload:"
          echo "$PAYLOAD"
          
          # POST and capture HTTP status
          HTTP_STATUS=$(
            curl -s -o /dev/null -w "%{http_code}" \
              -X POST "$DISCORD_WEBHOOK_URL" \
              -H 'Content-Type: application/json' \
              -d "$PAYLOAD"
          )
          
          echo "Discord API responded with HTTP $HTTP_STATUS"
          if [ "$HTTP_STATUS" -ge 400 ]; then
            echo "❌ Failed to notify Discord"
            exit 1
          fi
