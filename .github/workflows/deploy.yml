name: Deploy Discord Bots

on:
  workflow_run:
    workflows: ["Release Discord Bots"]
    types:
      - completed

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      genie-changed: ${{ steps.filter.outputs['genie-bot'] }}
      trivia-changed: ${{ steps.filter.outputs['triviabot'] }}
      opie-changed: ${{ steps.filter.outputs['opie-bot'] }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            genie-bot:
              - 'genie-bot/**'
            triviabot:
              - 'triviabot/**'
            opie-bot:
              - 'opie-bot/**'

  deploy:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - bot: genie-bot
            changed: ${{ needs.filter.outputs.genie-changed }}
          - bot: triviabot
            changed: ${{ needs.filter.outputs.trivia-changed }}
          - bot: opie-bot
            changed: ${{ needs.filter.outputs.opie-changed }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Attempt to download artifact (if it exists)
        id: download
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.bot }}-artifact
          path: ./artifact/${{ matrix.bot }}

      - name: Load SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Connect to VPS and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            cd /root/DiscordBots/${{ matrix.bot }}
            if [ -d "./artifact/${{ matrix.bot }}" ]; then
              echo "Deploying updated files for ${{ matrix.bot }}..."
              rm -rf dist
              mv ./artifact/${{ matrix.bot }} ./dist
            else
              echo "No artifact found for ${{ matrix.bot }}, skipping deploy."
            fi
            echo "Restarting PM2 for ${{ matrix.bot }}..."
            pm2 restart ${{ matrix.bot }} || pm2 start dist/index.js --name ${{ matrix.bot }}

      - name: Notify Discord of Deployment
        if: steps.download.outcome == 'success'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VERSION=$(jq -r .version ./artifact/${{ matrix.bot }}/package.json || echo "unknown")
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"âœ… **Deployed** \\\\`${{ matrix.bot }}\\\` version **${VERSION}** to production.\"}" \
               $DISCORD_WEBHOOK_URL
