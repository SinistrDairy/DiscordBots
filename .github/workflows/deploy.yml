name: Deploy Discord Bots

on:
  workflow_run:
    workflows: ["Release Discord Bots"]
    types: [completed]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      genie-changed: ${{ steps.filter.outputs['genie-bot'] }}
      trivia-changed: ${{ steps.filter.outputs['triviabot'] }}
      opie-changed: ${{ steps.filter.outputs['opie-bot'] }}
    steps:
      - name: Checkout for filtering
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            genie-bot:
              - 'genie-bot/**'
            triviabot:
              - 'triviabot/**'
            opie-bot:
              - 'opie-bot/**'

  deploy:
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - bot: genie-bot
            name: Genie
            changed: ${{ needs.filter.outputs.genie-bot }}
          - bot: triviabot 
            name: Russell
            changed: ${{ needs.filter.outputs.triviabot }}
          - bot: opie-bot
            name: Opie
            changed: ${{ needs.filter.outputs.opie-bot }}

    steps:
      # 1) **Always** checkout the exact SHA the Release run used
      - name: Checkout at release SHA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      # 2) Install Node.js, pnpm & jq
      - name: Setup Node.js, pnpm & jq
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get update
          sudo apt-get install -y nodejs jq
          npm install -g pnpm

      # 3) Build only if this bot actually changed
      - name: Install & build bot
        if: ${{ matrix.changed == 'true' }}
        run: |
          cd ${{ matrix.bot }}
          pnpm install
          pnpm build

      # 4) SSH into your VPS
      - name: Setup SSH agent
        if: ${{ matrix.changed == 'true' }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        if: ${{ matrix.changed == 'true' }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      # 5) Sync dist/ and restart PM2
      - name: Copy dist and restart PM2
        if: ${{ matrix.changed == 'true' }}
        run: |
          rsync -avz --delete ${{ matrix.bot }}/dist/ \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/root/DiscordBots/${{ matrix.bot }}/dist
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} \
            "pm2 restart ${{ matrix.bot }} || pm2 start /root/DiscordBots/${{ matrix.bot }}/dist/index.js --name ${{ matrix.bot }}"

      # 6) Let Discord know it’s live
      - name: Notify Discord of Deployment
        if: ${{ matrix.changed == 'true' }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VERSION=$(jq -r .version ./${{ matrix.bot }}/package.json)
          curl -X POST "$DISCORD_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "{\"content\":\"✅ Deployed \\\`${{ matrix.name }}\\\` v**${VERSION}** to production.\"}"
